{
  "hash": "6149061a0bcbbafd5a110d7dbbca43c8",
  "result": {
    "markdown": "---\ntitle: \"Explorando la GUI de GRASS GIS\"\nauthor: \"Verónica Andreo\"\ndate: today\nformat:\n  html:\n    code-tools: true\n    code-copy: true\n    code-fold: false\n---\n\nEn ésta primera sesión práctica, vamos a familiarizarnos con las diferentes\ninterfaces de GRASS GIS, especialmente la terminal y la GUI.\nVamos a explorar los datos de muestra más clásicos de GRASS GIS y en los que\nse basan la mayoría de los ejemplos en los manuales: el famoso \n**North Carolina sample project**. Así visualizaremos algunos mapas vectoriales\ny ráster, haremos consultas sobre los mismos y configuraremos la región \ncomputacional, entre otras cosas. \n\n\n\n\n# Iniciamos GRASS GIS\n\nPara iniciar GRASS localmente, podemos:\n\n- Click sobre el ícono de GRASS GIS (*En MS Windows: Inicio >> OSGeo4W >> GRASS GIS*)\n- Abrir una terminal o la *OSGeo4W Shell* si estás en MS Windows y escribir:\n\n```bash\ngrass\n```\n\n![Ejecutando GRASS por primera vez](../assets/img/grass_gui_first_time_open.png)\n\nDado que para iniciar, el software requiere la ruta a un mapset, si ésta no es\nprovista o no existe, GRASS crea automáticamente un directorio `grassdata` con\nun proyecto por defecto llamado `ẁorld_latlong_wgs84` donde encontramos el \nmapset `PERMANENT` y un mapa vectorial de ejemplo. Procedemos entonces a \ndescargar unos datos de muestra para empezar a trabajar.\n\n#### *North Carolina sample project*\n\n{{< fa download >}} Descargamos los datos de muestra [**North Carolina full**](https://grass.osgeo.org/sampledata/north_carolina/nc_spm_08_grass7.zip) \ny los descomprimimos dentro del directorio `grassdata`\n\nEs posible descargar varios datos de muestra directamente desde la GUI:\n\n![](../assets/img/download_location.png){fig-align=\"center\"}\nUna vez que la descarga termina, el nuevo proyecto es automáticamente \ndescomprimido dentro de la base de datos de GRASS o `grassdata`.\n\n![](../assets/img/download_location_finished.png){fig-align=\"center\"}\n\n# Exploramos la GUI\n\nPara comenzar a explorar la GUI vamos a cambiarnos al mapset PERMANENT del\nproyecto que acabamos de descargar. Para eso, hacemos click derecho sobre\n`nc_spm_08_grass7` >> `PERMANENT` y seleccionamos *Switch mapset* en el menú\ncontextual. \n\n![](../assets/img/switch_locations.png){fig-align=\"center\"}\n\nAhora estamos entonces en el proyecto que descargamos.\n\n![](../assets/img/current_mapset.png){fig-align=\"center\"}\n\n## Obtener información sobre el CRS\n\n![](../assets/img/projection_info.png){width=65%}\n\n... o simplemente desde la terminal:\n\n```bash\ng.proj -p\n```\n\n## Listar mapas\n\nComo vimos al principio para listar \"cosas\" dentro de la base de datos de\nGRASS, usamos [g.list](https://grass.osgeo.org/grass-stable/manuals/g.list.html). \nProbemos escribir los siguientes comandos en la Consola de la GUI o en la \nterminal:\n\n\n```{bash}\n# lista de los mapas raster\ng.list type=raster\n# lista de los mapas vectoriales\ng.list type=vector\n```\n\n\n:::{.callout-caution title=\"Tarea\"}\nQué otros tipos de elementos podemos listar con `g.list`?\n:::\n\nAhora, busquemos mapas raster cuyo nombre comienza con \"el\", pero que no sean\nel mapa \"elevation\".\n\n\n```{bash}\n# listar con un patrón\ng.list type=raster pattern=\"el*\" exclude=elevation\n```\n\n\n:::{.callout-caution title=\"Tarea\"}\nUsen `g.list` y expresiones regulares para listar únicamente los mapas \nvectoriales P079214 y P079215\n:::\n\n## Visualizar mapas ráster y vectoriales\n\nTenemos muchas opciones para visualizar mapas:\n\n- Desde el menú principal: \n**File >> Map display >> Add raster|vector** (Shift+Ctrl+R ó Shift+Ctrl+V)\n- Desde los íconos de la barra de tareas del panel *Layers*\n- Doble-click sobre el mapa en el panel *Data Catalog*\n- Desde la pestaña *Consola* con los comandos `d.vect|rast`\n- Desde la pestaña *Python* con `AddLayer('map_name')`\n- Desde la terminal negra llamando monitores wx con  [*d.mon*](https://grass.osgeo.org/grass-stable/manuals/d.mon.html) + \n`d.vect|rast`\n\n:::{.callout-caution title=\"Tarea\"}\nProbar las diferentes maneras de visualizar mapas en GRASS GIS y explorar las\nopciones de zoom al mapa y zoom a la región del menú del panel *Map Display*.\n\n![](../assets/img/zoom_map_and_region.png){width=90%}\n:::\n\n## Invocar comandos de GRASS GIS\n\nHay diferentes opciones para invocar comandos o herramientras de GRASS GIS, \ntanto desde la GUI como desde la terminal. \n\n- Desde la interfaz gráfica (GUI): \n  - seleccionando desde el menú principal\n  - tipeando en la pestaña *Console*\n  - explorando el árbol de herramientas o buscando por nombre o palabra clave en la pestaña *Tools*\n  \n- Desde la terminal: \n  - tipear la primera letra o algunas letras del comando + `<tab><tab>` para opciones y autocompletado\n\n:::{.callout-caution title=\"Tarea\"}\n- Ejecutar `r.univar map=elevation` desde la GUI (Raster >> Reports and \nstatistics)\n- Ejecutar `r.univar map=elevation` desde la pestaña *Console*\n- Escribir `r.un` en la terminal + `<tab><tab>`, luego `<Enter>`\n- Ejecutar `r.univar map=elevation` en la terminal\n:::\n\nAl ejecutar comandos desde la pestaña Consola en la GUI, tenemos la posibilidad \nde guardar tanto las salidas de texto de los comandos como la historia de \ncomandos ejecutados desde allí. Esto es equivalente a ejecutar `history` en la\nterminal.\n\n![](../assets/img/log_file_button.png){width=85% fig-align=\"center\"}\n\nPor otra parte, al ejecutar los comandos desde la interfaz gráfica de cada uno\nde ellos podemos ver cómo con cada parámetro que definimos, se va construyendo\nel comando con la sintaxis de GRASS. Éstos se pueden copiar y pegar en un \narchivo de texto para después modificar o volver a ejecutar, sin necesidad de\nhacer todos los *clicks*.\n\n![](../assets/img/copy_button.png){width=85% fig-align=\"center\"}\n\n## Consultas sobre mapas \n\n![](../assets/img/query_raster_maps.png)\n\n## Consultas sobre mapas vectoriales\n\n![](../assets/img/query_vector_maps.png)\n\n## Tabla(s) de atributos de mapas vectoriales\n\n![](../assets/img/vector_attr_table.png)\n\n:::{.callout-caution title=\"Tarea\"}\n- Abrir el mapa vectorial `zipcode`\n- Cambiar el color de las áreas\n- Seleccionar sólo los límites (boundaries) y mostrarlos con otro color\n- Mostrar sólo los valores de `cat` entre 1 y 40\n- Construir una consulta SQL con al menos dos condiciones\n:::\n\n\n## Región computacional\n\nLa **región computacional** es la configuración de límites del área de análisis \ny resolución espacial (raster).\n\n![](../assets/img/region.png)\n\nImprimamos la region computacional actual:\n\n```bash\ng.region -p\n```\n\n:::{.callout-caution title=\"Tarea\"}\n1. Cambiar la región computacional actual a un mapa vectorial e imprimir los \nnuevos ajustes.\n2. Alinear la resolución de la región computacional a un mapa raster e imprimir \nlos nuevos ajustes para comprobar.\n3. Comfiguremos la region computacional al mapa `elevation`, imprimamos su \nestadistica univariada, luego cambiemos la region computacional \ndesde el *Map Display* e imprimimos la estadistica del mapa una vez más... \nqué notan?\n:::\n\n\n## Visualización 3D\n\n![](../assets/img/3d_view.png){width=95%}\n\n:::{.callout-caution title=\"Tarea\"}\n- Cambiar a *Vista 3D* en la ventana *Map Display*.\n- Explorar las opciones disponibles en la nueva pestaña 3D que aparece en el \npanel *Layers*.\n:::\n\n\n## Composición cartográfica en la GUI\n\n\n:::{.callout-caution title=\"Tarea\"}\n- Desplegar los mapas `elevation` y `roadsmajor`.\n- Superponer una grilla.\n- Agregar *labels* a los caminos (**Sugerencia**: botón derecho sobre el nombre \ndel mapa en el *Layer Manager*).\n- Agregar las leyendas para el mapa raster y vectorial.\n- Agregar barra de escala.\n- Agregar símbolo indicando el *Norte*.\n- Agregar título al mapa.\n- Exportar el resultado en formato png.\n:::\n\n![](../assets/img/map_decorations_task.png){width=80%}\n\n\n## Ayuda\n\n\nCómo obtenemos ayuda sobre los módulos de GRASS GIS?\n\n- Desde el menú principal `Help` de la GUI.\n- En la GUI de cada comando.\n- `<comando> --help` en la terminal o en la pestaña *Consola* para obtener la \ndescripción de parámetros y opciones del módulo.\n- `g.manual <comando>` para acceder al manual online.\n\n\n:::{.callout-caution title=\"Tarea\"}\nObtener ayuda para `r.grow.distance` y `v.what.rast`. Para qué se usan? \nCuáles son sus parámetros y opciones?\n:::\n\n",
    "supporting": [
      "explore_grass_gui_files"
    ],
    "filters": [],
    "includes": {}
  }
}