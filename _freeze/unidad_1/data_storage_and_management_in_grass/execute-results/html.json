{
  "hash": "c9604cb61a42837b2f513134fde5472e",
  "result": {
    "markdown": "---\ntitle: \"Manejo y almacenamiento de datos\"\nauthor: \"Verónica Andreo\"\ndate: today\nformat:\n  html:\n    code-tools: true\n    code-copy: true\n    code-fold: false\n---\n\nEn este segundo ejercicio de familiarización con GRASS GIS, vamos a explorar \nla base de datos de GRASS (o lo que usualmente llamaremos *grassdata*), ver\ncómo crear nuevos proyectos y mapsets, cómo cambiar de mapset y leer datos de \nmapsets diferentes al actual, realizar reproyecciones, e importar y exportar \ndatos.\n\n<!-- ## Datos para el ejercicio -->\n<!-- - Descargar los [rasters](https://gitlab.com/veroandreo/curso-grass-gis-rioiv/blob/master/data/sample_rasters.zip) y el [vector](https://gitlab.com/veroandreo/curso-grass-gis-rioiv/blob/master/data/streets.gpkg) de muestra -->\n<!-- - Crear un directorio en *`$HOME`* (o Documentos) y llamarlo *`gisdata`* -->\n<!-- - Descomprimir los archivos descargados dentro de *`$HOME/gisdata`* -->\n\n\n## Creación de un nuevo proyecto (location)\n\nTenemos diferentes opciones para crear proyectos (locations) nuevos en \nGRASS GIS:\n\n- Desde la GUI\n  - botón *Crear nuevo location* en el menú del panel Data Catalog ![](../assets/img/create_new_project_button.png)\n  \n  - desde el menú principal: Settings >> GRASS working environment >> Create new location ![](../assets/img/create_new_project_main_menu.png)\n\n\n- Desde la terminal o la pestaña Consola\n  - con la opción *`-c`* en el comando de inicio [`grass`](https://grass.osgeo.org/grass-stable/manuals/grass.html) + la ruta al nuevo location y un archivo geo-referenciado o un código EPSG\n\n\n```{bash}\n# con archivo geo-referenciado\ngrass -c geofile.tif grassdata/UTM20S\n\n# con código epsg\ngrass -c EPSG:32720 grassdata/UTM20S\n```\n\n\n:::{.callout-caution title=\"Tarea\"}\nSiguiendo los pasos ejemplificados en la siguiente figura, vamos a crear\nun nuevo proyecto \"latlong\" utilizando el código [EPSG](http://epsg.io/)\n4326. Notar que una vez completado el proceso, GRASS cambia al nuevo proyecto.\n:::\n\n![](../assets/img/create_project_gui_with_epsg.png){width=100%}\n\n![](../assets/img/create_new_loc_6.png){fig-align=\"center\"}\n\n\nLos pasos de arriba se podrían haber reemplazado por el siguiente comando\ndesde la terminal o la pestaña Consola dentro del panel lateral:\n\n```bash\n# Crear un nuevo location con EPSG:4326\ngrass -c EPSG:4326 $HOME/grassdata/latlong\n```\n\nCuando creamos un nuevo proyecto de esta manera, GRASS abrirá una nueva sesión \nen el proyecto creado.\n\n\n## Crear un nuevo mapset\n\nTambién existen varias opciones para crear mapsets dentro de los proyectos.\n\n- Desde la GUI\n  - botón *Crear nuevo mapset* desde el menú del panel Data Catalog \n  ![](../assets/img/create_new_mapset_button.png)\n  - desde el menú principal: Settings >> GRASS working environment >> Create new mapset\n  ![](../assets/img/create_new_mapset_main_menu.png)\n\n- Desde la terminal o la pestaña Consola\n  - con el comando [g.mapset](https://grass.osgeo.org/grass-stable/manuals/g.mapset.html)\n\n```{bash}\ng.mapset mapset=curso\n```\n\n\nGRASS cambia automáticamente al nuevo mapset creado.\n\n:::{.callout-caution title=\"Tarea\"}\nCrear un nuevo mapset llamado *curso* dentro del location *latlong* con el \nmétodo que deseen.\n:::\n\n\n## Eliminar y renombrar proyectos y mapsets\n\nSimplemente se elimina el directorio desde el explorador de archivos del sistema\no se utiliza el menú contextual. Notar que tiene que estar activado el modo\nedición y que para eliminar proyectos o mapsets, debemos estar en proyectos y\nmapsets diferentes de aquellos que deseamos eliminar.\n\n:::: columns\n\n:::{.column width=\"49%\"}\n![](../assets/img/delete_rename_project.png)\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"49%\"}\n![](../assets/img/delete_rename_mapset.png)\n:::\n\n::::\n\n\n## Cambiar de mapset\n\n- Desde la GUI:\n\n:::: columns\n:::{.column width=\"59%\"}\n![](../assets/img/change_mapset.png)\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"39%\"}\n![](../assets/img/change_mapset_contextual_menu.png)\n:::\n::::\n\n- Desde la terminal o la Consola: \n\n```bash\n# imprimir el mapset actual\ng.mapset -p\n\n# cambiar al mapset PERMANENT\ng.mapset mapset=PERMANENT\n```\n\n## Agregar mapsets a la lista de mapsets accesibles\n\nA veces se requiere *leer datos de otro mapset* y usarlos para algún \nprocesamiento. Entonces es necesario **ver** ese mapset desde el mapset actual\ndonde estamos trabajando. \n\n```bash\n# imprimir el mapset actual\ng.mapset -p\n# imprimir los mapsets accesibles\ng.mapsets -p\n# agregar *user1* a la lista de mapsets accesibles\ng.mapsets mapset=user1 operation=add\n# corroborar que es visible\ng.mapsets -p\n```\n\n:::{.callout-note}\nEstas operaciones se realizan dentro de un mismo proyecto. No es posible \nagregar/ver mapas de otros proyectos (locations).\n:::\n\n\n## Importar mapas raster y vectoriales\n\n- [r.in.gdal](https://grass.osgeo.org/grass-stable/manuals/r.in.gdal.html): Importa datos raster en GRASS usando la librería GDAL \n\n```bash\nr.in.gdal input=myraster.tif output=myraster\n```\n\n- [v.in.ogr](https://grass.osgeo.org/grass-stable/manuals/v.in.ogr.html): Importa datos vectoriales en GRASS usando la librería OGR. \n\n```bash\nv.in.ogr input=myvector.shp output=myvector\n```\n\n:::{.callout-important}\nPara usar estos comandos, los mapas deben tener \n**el mismo sistema de coordenadas que el location al que los queremos importar**\n:::\n\n:::{.callout-note}\nCómo obtener los metadatos de cualquier mapa raster?\n\n```bash\ngdalinfo <mapname>\n```\n:::\n\nAlternativamente, podemos usar [r.import](https://grass.osgeo.org/grass-stable/manuals/r.import.html) y \n[v.import](https://grass.osgeo.org/grass-stable/manuals/v.import.html)\nque ofrecen *re-proyección al vuelo* y también, remuestreo y recorte para los \ndatos raster. En este caso, entonces, los mapas raster y vectoriales no \nnecesitan tener el mismo sistema de coordenadas que el proyecto (location)\nde destino. Veamos dos ejemplos y sigamos las instrucciones que nos muestran.\n\n\n#### Importar un mapa raster en el proyecto NC\n\n:::: columns\n:::{.column width=\"49%\"}\n![](../assets/img/r_import_1.png)\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"49%\"}\n![](../assets/img/r_import_2.png)\n:::\n::::\n\n\n#### Importar un mapa vectorial en el proyecto NC\n\n:::: columns\n:::{.column width=\"49%\"}\n![](../assets/img/v_import_1.png)\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"49%\"}\n![](../assets/img/v_import_2.png)\n:::\n::::\n\n:::{.callout-warning title=\"Tarea\"}\nImportar los rasters y el vector de muestra provistos dentro del mapset *curso*\nque crearon más arriba.\n:::\n\n## Trabajar sin importar los mapas\n\nEn lugar de importar los datos a la base de datos de GRASS, se puede trabajar\nsolamente **vinculando** los datos. Para ello, usamos los siguientes módulos:\n\n- [r.external](https://grass.osgeo.org/grass-stable/manuals/r.external.html): Vincula datos raster en formatos soportados por GDAL como un pseudo raster de GRASS.\n- [v.external](https://grass.osgeo.org/grass-stable/manuals/v.external.html): Crea un pseudo-vector GRASS vinculando formatos vectoriales soportados por OGR o tablas de PostGIS. \n\n:::{.callout-important}\n**No renombrar, eliminar o mover los archivos vinculados...!**\n:::\n\n\n## Re-proyección de mapas\n\nCada location está definida por su sistema de coordenadas de referencia \n(*CRS* por su abreviación en Inglés), así que \n**re-proyectar == transferir/transformar mapas entre distintos proyectos**.\n\nPara la **re-proyección de rasters** se definen extensión y resolución deseadas\nen el proyecto de destino previo a la re-proyección, mientras que para la\n**re-proyección de vectores** se re-proyecta todo el mapa por transformación de\ncoordenadas.\n\nEn general, el **mecanismo** es el siguiente: se trabaja desde el proyecto de \ndestino, y desde allí se llama a los mapas en el proyecto de origen.\n\n:::{.callout-caution title=\"Tarea\"}\n- Crear un nuevo proyecto (*location*) con el nombre *UTM18N* a partir de una \nde las bandas de L8 provistas como rasters de muestra e importarla.\n- Importar a *nc_spm_08_grass7/user1* (con re-proyección al vuelo) la banda \nde L8 importada al proyecto *UTM18N*. ¿En qué mapset estaba?\n- Definir (e imprimir) la región computacional al raster importado en ambos\nproyectos.\n:::\n\nTambién está la opción de copiar y pegar mapas de un proyecto a otro desde\nel menú contextual de la GUI.\n\n:::: columns\n:::{.column width=\"46%\"}\n![](../assets/img/copy_map_origin_location.png)\n:::\n\n:::{.column width=\"4%\"}\n:::\n\n:::{.column width=\"46%\"}\n![](../assets/img/paste_map_target_project.png)\n:::\n::::\n\n\n## Exportar mapas raster y vectoriales\n\nPara exportar mapas desde GRASS GIS utilizamos los comandos \n[r.out.gdal](https://grass.osgeo.org/grass-stable/manuals/r.out.gdal.html) y [v.out.ogr](https://grass.osgeo.org/grass-stable/manuals/v.out.ogr.html) que \nnos permiten exportar a formatos soportados por GDAL/OGR.\n\n:::{.callout-caution title=\"Tarea\"}\n- Explorar `r.out.gdal` y `v.out.ogr` y exportar los mapas *elevation* y \n*roadsmajor*.\n- Abrir los mapas exportados en QGIS.\n:::\n\n",
    "supporting": [
      "data_storage_and_management_in_grass_files"
    ],
    "filters": [],
    "includes": {}
  }
}