{
  "hash": "ff0d03d2acc9f3850fe88e035180b733",
  "result": {
    "markdown": "---\ntitle: Datos satelitales en GRASS GIS\nauthor: Verónica Andreo\ndate: today\nformat:\n  html:\n    code-tools: true\n    code-copy: true\n    code-fold: false\nexecute:\n  eval: false\n  cache: false\n  keep-ipynb: true\n---\n\nLos datos satelitales en general vienen en formato raster, por lo tanto aplican\nlas mismas reglas.\n\nLos comandos **i.\\*** se orientan explícitamente al procesamiento de datos \nsatelitales aunque algunos puedan usarse para otros datos raster.\n\n:::{.callout-note}\nPara más detalles, ver el manual de [Imagery Intro](https://grass.osgeo.org/grass-stable/manuals/imageryintro.html) y la wiki\nsobre [Image Processing](https://grasswiki.osgeo.org/wiki/Image_processing).\n:::\n\n# Datos para esta sesión\n\n:::: columns\n:::{.column width=\"50%\"}\nEscenas Landsat 8 (OLI)\n\n- Fechas: 14/01/2020 y 02/03/2020\n- Path/Row: 229/082\n- CRS: UTM zona 20 N (EPSG:32620)\n:::\n\n:::{.column width=\"50%\"}\n![](https://landsat.gsfc.nasa.gov/wp-content/uploads/2021/12/ldcm_2012_COL-300x168-1.png){fig-align=\"right\"}\n:::\n::::\n\nDescargar las escenas [L8 14/01/2020 (979Mb)](https://drive.google.com/file/d/1ytQp-xin1FQr_hqtDJRLgK6g4eXwK-WI/view?usp=sharing) y [L8 02/03/2020 (880Mb)](https://drive.google.com/file/d/1Gg8FbhwpIQR-GyYepM4uw_9IOjEnji_N/view?usp=sharing) y moverlas a `$HOME/gisdata/landsat_data`. **No descomprimir!**\n\n\n# Historia de la mision Landsat\n\n![Lanzamientos de satélites Lansat desde 1972](https://landsat.gsfc.nasa.gov/wp-content/uploads/2020-07/Landsat_timeline_20200318_title.gif)\n\nEl sistema de escáner multiespectral (MSS) a bordo del Landsats 1-5 disponía de cuatro bandas. El Thematic Mapper (TM) a bordo de Landsats 4 y 5 tenía siete bandas. El Enhanced Thematic Mapper Plus (ETM+) del Landsat 7 tiene 8 bandas y los Landsats 8 y 9 tienen 11 bandas. Fuente: <https://landsat.gsfc.nasa.gov/satellites/landsat-9/landsat-9-bands/>. \n\n![Comparación entre las bandas de todos los satélites Landsat](https://landsat.gsfc.nasa.gov/wp-content/uploads/2021/12/all_Landsat_bands.png)\n\n:::{.callout-note}\nMás detalles sobre las misiones Landsat pueden encontrarse en: \n<https://www.usgs.gov/landsat-missions>\n:::\n\n# Manos a la obra\n\n## Iniciamos GRASS GIS\n\nIniciamos GRASS GIS en *posgar2007_4_cba/PERMANENT*\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport os\n\n# data directory\nhomedir = os.path.expanduser('~')\n\n# GRASS GIS database variables\ngrassdata = os.path.join(homedir, \"grassdata\")\nproject = \"posgar2007_4_cba\"\nmapset = \"PERMANENT\"\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# import standard Python packages we need\nimport sys\nimport subprocess\n\n# ask GRASS GIS where its Python packages are to be able to run it from the notebook\nsys.path.append(\n    subprocess.check_output([\"grass\", \"--config\", \"python_path\"], text=True).strip()\n)\n```\n:::\n\n\nAhora sí, estamos listos para importar los paquetes de GRASS e iniciar una\nsesión:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# import the GRASS GIS packages we need\nimport grass.script as gs\nimport grass.jupyter as gj\n\n# Start the GRASS GIS Session\nsession = gj.init(grassdata, project, mapset)\n```\n:::\n\n\nCorroboramos la proyección\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# check the CRS\ngs.read_command(\"g.proj\", flags=\"p\")\n```\n:::\n\n\n## Crear un nuevo mapset\n\nCreamos un nuevo mapset llamado *landsat8*:\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Create a new mapset\ngs.create_environment(grassdata, project, mapset=\"landsat8\")\n```\n:::\n\n\nListamos los mapsets accesibles\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# list all the mapsets in the search path\ngs.mapsets()\n```\n:::\n\n\nListamos los mapas vectoriales disponibles\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# list vector maps in all mapsets in the search path\ngs.list_grouped(type=\"vector\")\n```\n:::\n\n\n## Región de interés\n\nExtraemos el radio urbano de Córdoba\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# extract Cordoba urban area from `radios_urbanos`\ngs.run_command(\"v.extract\", input=\"radios_urbanos\", where=\"nombre == 'CORDOBA'\", output=\"radio_urbano_cba\")\n```\n:::\n\n\nEstablecemos la región computacional al radio urbano de Córdoba\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# set the computational region to the extent of Cordoba urban area\ngs.run_command(\"g.region\", flags=\"p\", vector=\"radio_urbano_cba\")\n```\n:::\n\n\n## Descargar e importar los datos L8\n\nInstalar la extensión *i.landsat*:\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# install i.landsat toolset\ng.extension extension=i.landsat\n```\n:::\n\n\nBuscar escenas de Landsat 8 disponibles\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# search for Landsat 8 scenes\ni.landsat.download -l settings=$HOME/gisdata/USGS_SETTING.txt \\\n  dataset=landsat_8_c1 clouds=35 \\\n  start='2019-10-27' end='2020-03-15'\n```\n:::\n\n\nNO EJECUTAR! Descargar las escenas seleccionadas\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# download selected scenes\n# i.landsat.download settings=$HOME/gisdata/USGS_SETTING.txt \\\n#   id=LC82290822020062LGN00,LC82290822020014LGN00 \\\n#   output=$HOME/gisdata/landsat_data\n```\n:::\n\n\nImprimir las bandas dentro de la carpeta\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# print all landsat bands within landsat_data folder\ngs.run_command(i.landsat.import -p input=$HOME/gisdata/landsat_data)\n```\n:::\n\n\nImprimir sólo las bandas seleccionadas con un patrón\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# print a selection of bands - might be sloooow\ngs.run_command(i.landsat.import -p input=$HOME/gisdata/landsat_data pattern='B(2|3|4|5|6|8)')\n```\n:::\n\n\nImportar bandas, recortar y reproyectar al vuelo\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\n# import all bands, subset to region and reproject\ngs.run_command(i.landsat.import -r input=$HOME/gisdata/landsat_data extent=region)\n```\n:::\n\n\nListar bandas importadas y revisar metadatos\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\n# list raster maps\ngs.list_grouped(type=raster)[\"landsat8\"]\n```\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\n# check metadata of some imported bands\ngs.raster_info(map=LC08_L1TP_229082_20200114_20200127_01_T1_B4)\ngs.raster_info(map=LC08_L1TP_229082_20200114_20200127_01_T1_B8)\n```\n:::\n\n\n## Pre-procesamiento de datos satelitales\n\n![Workflow de pre-procesamiento de datos satelitales](../assets/img/rs_workflow.jpg){width=70% fig-align=\"center\"}\n\n### De número digital (ND) a reflectancia y temperatura\n\n- Los datos L8 OLI vienen en 16-bit con rango de datos entre 0 y 65535.\n- [i.landsat.toar](https://grass.osgeo.org/grass-stable/manuals/i.landsat.toar.html) \nconvierte ND en reflectancia TOA (y temperatura de brillo) para todos los sensores \nLandsat. Opcionalmente proporciona reflectancia de superficie (BOA) después de la\ncorrección DOS. \n- [i.atcorr](https://grass.osgeo.org/grass-stable/manuals/i.atcorr.html) proporciona\nun método de corrección atmosférica más complejo para gran variedad de sensores \n(S6).\n\n\nDefinir region computacional a banda de 30m\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\n# set the region to a 30m band\ngs.run_command(\"g.region\", raster=\"LC08_L1TP_229082_20200114_20200127_01_T1_B4\", flags=\"p\")\n```\n:::\n\n\nConvertir DN a reflectancia superficial y temperatura - método DOS\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\n# convert from DN to surface reflectance and temperature - requires to uncompress data locally\ngs.run_command(i.landsat.toar input=\"LC08_L1TP_229082_20200114_20200127_01_T1_B\"   output=\"LC08_229082_20200114_toar_B\" sensor=\"oli8\" metfile=\"$HOME/gisdata/landsat_data/LC08_L1TP_229082_20200114_20200127_01_T1_MTL.txt\"\nmethod=\"dos1\")\n```\n:::\n\n\nCorroborar info antes y después de la conversión para una banda\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\n# list output maps\ng.list type=raster mapset=. pattern=\"*toar*\"\n```\n:::\n\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\n# check info before and after for one band\nr.info map=LC08_L1TP_229082_20200114_20200127_01_T1_B3\nr.info map=LC08_229082_20200114_toar_B3\n```\n:::\n\n\n![Banda 10 de L8 con la paleta de colores *kelvin*](../assets/img/L8_band10_kelvin.png)\n\n:::{.callout--caution title=\"Tarea\"}\nAhora, sigan los mismos pasos para la escena del 02/03/2020. \n¿Qué notan de diferente?\n:::\n\n### Ajuste de color y composiciones RGB\n\nAjuste de colores para una composición RGB color natural\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\n# enhance the colors\ngs.run_command(i.colors.enhance red=LC08_229082_20200114_toar_B4   green=LC08_229082_20200114_toar_B3 blue=LC08_229082_20200114_toar_B2 strength=95)\n```\n:::\n\n\nMostrar la combinación RGB\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\n# display RGB\nrgb = gj.\n```\n:::\n\n\n:::{.callout--caution title=\"Tarea\"}\nSeguir los mismos pasos para una composición falso color 543. \nSobre qué bandas debieran realizar el ajuste? \n:::\n\n:::: columns\n:::{.column width=\"50%\"}\n![Composición color natural 432](../assets/img/L8_composite432.png)\n:::\n\n:::{.column width=\"50%\"}\n![Composición falso color 543](../assets/img/L8_composite543.png)\n:::\n::::\n\n### Enmascarado de nubes con banda QA\n\n- Landsat 8 proporciona una banda de calidad (quality assessment, QA) con valores\nenteros de 16 bits que representan las combinaciones de superficie, atmósfera y \ncondiciones del sensor que pueden afectar la utilidad general de un determinado \npixel. \n- La extensión [i.landsat.qa](https://grass.osgeo.org/grass-stable/manuals/addons/i.landsat.qa.html) reclasifica la banda QA de Landsat 8 de acuerdo a la calidad del pixel. \n\n:::{.callout-note}\nMás información sobre la banda QA de L8 en la [guía de usuario](https://d9-wret.s3.us-west-2.amazonaws.com/assets/palladium/production/s3fs-public/media/files/LSDS-1619_Landsat8-9-Collection2-Level2-Science-Product-Guide-v5.pdf).\n:::\n \nCrear las reglas para identificar las nubes y sombras de nubes\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\n# create a rule set\ngs.run_command(i.landsat.qa collection=1 cloud_shadow_confidence=\"Medium,High\"   cloud_confidence=\"Medium,High\" output=Cloud_Mask_rules.txt)\n```\n:::\n\n\nReclasificar la banda QA en función de las reglas\n\n::: {.cell execution_count=25}\n``` {.python .cell-code}\n# reclass the BQA band based on the rule set created\ngs.run_command(r.reclass input=LC08_L1TP_229082_20200114_20200127_01_T1_BQA\n  output=LC08_229082_20200114_Cloud_Mask rules=Cloud_Mask_rules.txt)\n```\n:::\n\n\nReporte del porcentaje de nubes y sombras\n\n::: {.cell execution_count=26}\n``` {.python .cell-code}\n# report % of clouds and shadows\nprint(gs.read_command(r.report -e map=LC08_229082_20200114_Cloud_Mask units=p))\n```\n:::\n\n\nMostrar el mapa reclasificado\n\n::: {.cell execution_count=27}\n``` {.python .cell-code}\n# display reclassified map over RGB\nd.mon wx0\nd.rgb \\\n  red=LC08_229082_20200114_toar_B4 \\\n  green=LC08_229082_20200114_toar_B3 \\\n  blue=LC08_229082_20200114_toar_B2\nd.rast LC08_229082_20200114_Cloud_Mask\n```\n:::\n\n\n:::{.callout--caution title=\"Tarea\"}\nComparar visualmente la cobertura de nubes con la composición RGB 543.\n:::\n\n:::: columns\n:::{.column width=\"50%\"}\n![Composición falso color](../assets/img/L8_composite543.png)\n:::\n\n:::{.column width=\"50%\"}\n![Máscara de nubes](../assets/img/L8_clouds.png)\n:::\n::::\n\n### Fusión de datos/Pansharpening\n\nVamos a usar la banda PAN (15 m) para mejorar la definición de las bandas \nespectrales de 30 m, por medio de: \n[i.fusion.hpf](https://grass.osgeo.org/grass-stable/manuals/addons/i.fusion.hpf.html), \nque aplica un método de adición basado en un filtro de paso alto. \nOtros métodos están implementados en \n[i.pansharpen](https://grass.osgeo.org/grass-stable/manuals/i.pansharpen.html).\n\nInstalar la extensión *i.fusion.hpf*\n\n::: {.cell execution_count=28}\n``` {.python .cell-code}\n# Install the reqquired addon\ngs.run_command(g.extension extension=i.fusion.hpf)\n```\n:::\n\n\nCambiar la región a la banda PAN\n\n::: {.cell execution_count=29}\n``` {.python .cell-code}\n# Set the region to PAN band (15m)\ngs.run_command(g.region -p raster=LC08_229082_20200114_toar_B8)\n```\n:::\n\n\nEjecutar la fusión\n\n::: {.cell execution_count=30}\n``` {.python .cell-code}\n# Apply the fusion based on high pass filter\ngs.run_command(i.fusion.hpf -l -c pan=LC08_229082_20200114_toar_B8, msx=`g.list type=raster mapset=. pattern=*_toar_B[1-7] separator=,`, suffix=_hpf, center=high, modulation=max, trim=0.0)\n```\n:::\n\n\nListar los mapas resultantes usando un patrón de búsqueda\n\n::: {.cell execution_count=31}\n``` {.python .cell-code}\n# list the fused maps\ngs.list_grouped(type=raster, pattern=*_hpf)[\"landsat8\"]\n```\n:::\n\n\nVisualizar las diferencias\n\n![Datos originales 30 m y datos fusionados 15 m](../assets/img/L8_mapswipe_hpf.png)\n\n::: {.cell execution_count=32}\n``` {.python .cell-code}\n# display original and fused maps\n```\n:::\n\n\n### Índices de agua y vegetación\n\nEstablecer la máscara de nubes para evitar el cómputo sobre las nubes\n\n::: {.cell execution_count=33}\n``` {.python .cell-code}\n# Set the cloud mask to avoid computing over clouds\ngs.run_command(r.mask raster=LC08_229082_20200114_Cloud_Mask)\n```\n:::\n\n\nCalcular el NDVI y establecer la paleta de colores\n\n::: {.cell execution_count=34}\n``` {.python .cell-code}\n# Compute NDVI\nr.mapcalc \\\n  expression=\"LC08_229082_20200114_NDVI = \\\n  (LC08_229082_20200114_toar_B5_hpf - LC08_229082_20200114_toar_B4_hpf) / \\\n  (LC08_229082_20200114_toar_B5_hpf + LC08_229082_20200114_toar_B4_hpf) * 1.0\"\n# Set the color palette\nr.colors map=LC08_229082_20200114_NDVI color=ndvi\n```\n:::\n\n\nCalcular NDWI y establecer la paleta de colores\n\n::: {.cell execution_count=35}\n``` {.python .cell-code}\n# Compute NDWI\nr.mapcalc expression=\"LC08_229082_20200114_NDWI = \\\n  (LC08_229082_20200114_toar_B5_hpf - LC08_229082_20200114_toar_B6_hpf) / \\\n  (LC08_229082_20200114_toar_B5_hpf + LC08_229082_20200114_toar_B6_hpf) * 1.0\"\n# Set the color palette\nr.colors map=LC08_229082_20200114_NDWI color=ndwi\n```\n:::\n\n\nMostrar los mapas\n\n::: {.cell execution_count=36}\n``` {.python .cell-code}\nndi = gj.InteractiveMap()\nndi.add_raster()\nndi.show()\n```\n:::\n\n\n:::: columns\n:::{.column width=\"50%\"}\n![](../assets/img/L8_ndvi.png)\n:::\n:::{.column width=\"50%\"}\n![](../assets/img/L8_ndwi.png)\n:::\nNDVI y NDWI a partir de datos Landsat 8\n::::\n\n:::{.callout-warning title=\"Tarea\"}\nEstimar NDVI y NDWI para la otra escena usando el módulo [i.vi](https://grass.osgeo.org/grass-stable/manuals/i.vi.html) \n:::\n\n### Clasificación No Supervisada\n\n- Agrupar las bandas (i.e., hacer un stack): [i.group](https://grass.osgeo.org/grass-stable/manuals/i.group.html)\n- Generar firmas para *n* número de clases: [i.cluster](https://grass.osgeo.org/grass-stable/manuals/i.cluster.html)\n- Clasificar: [i.maxlik](https://grass.osgeo.org/grass-stable/manuals/i.maxlik.html)\n \nListar los mapas usando un patrón\n\n::: {.cell execution_count=37}\n``` {.python .cell-code}\n# list the bands needed for classification\ng.list type=raster mapset=. pattern=*_toar*_hpf\n```\n:::\n\n\nCrear un grupo de imágenes o *stack*\n\n::: {.cell execution_count=38}\n``` {.python .cell-code}\n# add maps to an imagery group for easier management\ni.group group=l8 subgroup=l8 \\\n input=`g.list type=raster mapset=. pattern=*_toar*_hpf sep=\",\"`\n```\n:::\n\n\nObtener estadísticos -firmas- para las *n* clases de interés con una muestra\nde pixeles\n\n::: {.cell execution_count=39}\n``` {.python .cell-code}\n# statistics for unsupervised classification\ni.cluster group=l8 subgroup=l8 \\\n sig=l8_hpf \\\n classes=7 \\\n separation=0.6\n```\n:::\n\n\nRealizar la clasificación no supervisada de toda la imagen\n\n::: {.cell execution_count=40}\n``` {.python .cell-code}\n# Maximum Likelihood unsupervised classification\ni.maxlik group=l8 subgroup=l8 \\\n sig=l8_hpf \\\n output=l8_hpf_class \\\n rej=l8_hpf_rej\n```\n:::\n\n\nMostrar el mapa clasificado\n\n![](../assets/img/L8_unsup_class.png)\n\n\n### Información derivada adicional\n\nInformación derivada adicional podría obtenerse con los siguientes módulos, \nentre otros:\n\n- medidas de textura: [r.texture](https://grass.osgeo.org/grass-stable/manuals/r.texture.html), \n- medidas de diversidad: [r.diversity](https://grass.osgeo.org/grass-stable/manuals/addons/r.diversity.html), \n- estadísticas locales con información de contexto: [r.neighbors](https://grass.osgeo.org/grass-stable/manuals/r.neighbors.html),\n- transformación tasseled cap: [i.tasscap](https://grass.osgeo.org/grass-stable/manuals/i.tasscap.html),\n- etc.\n\n\n### Clasificación en GRASS GIS\n\n- [Topic classification](http://grass.osgeo.org/grass-stable/manuals/topic_classification.html) en los manuales de GRASS GIS\n- [Image classification](http://grasswiki.osgeo.org/wiki/Image_classification) en la wiki\n- [Ejemplos de clasificación](http://training.gismentors.eu/grass-gis-irsae-winter-course-2018/units/28.html) en el curso dictado en Noruega en 2018\n- [Clasificación con Random Forest](https://neteler.gitlab.io/grass-gis-analysis/03_grass-gis_ecad_randomforest/) en la presentación del OpenGeoHub Summer School 2018 en Praga\n- [Detección de cambios con Landsat](https://veroandreo.gitlab.io/post/jan2021_ilandsat_tutorial/)\n\n\n## Semantic labels\n\nUn concepto bastante nuevo en GRASS GIS son las etiquetas semánticas o \n*semantic labels*. Éstas son especialmente relevantes para las imágenes de \nsatélite, ya que nos permiten identificar a qué sensor y banda corresponde una \ntrama determinada. Estas etiquetas son especialmente relevantes a la hora de \ntrabajar con colecciones de imágenes de satélite y también a la hora de \nclasificar diferentes escenas. Lo veremos más adelante, pero al generar una \nfirma espectral para un determinado conjunto de bandas, puede reutilizarse para \nclasificar otra escena siempre que las etiquetas semánticas sean las mismas. \nCuidado: aunque es posible reutilizar las firmas espectrales para cualquier \nescena con las mismas bandas, los cambios temporales (estaciones, impacto \nmeteorológico) limitan su aplicabilidad sólo a escenas obtenidas más o menos \nal mismo tiempo.\n\n",
    "supporting": [
      "imagery_data_in_grass_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}